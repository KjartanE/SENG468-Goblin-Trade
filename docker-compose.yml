version: "3"
services:
  frontend:
    container_name: frontend
    restart: always
    build: ./frontend
    ports:
      - "3000:${FRONTEND_PORT}"
    environment:
      - REACT_APP_BACKEND_HOST=${BACKEND_HOST}
      - REACT_APP_BACKEND_PORT=${BACKEND_PORT}
    networks:
      net-10.9.0.0:
        ipv4_address: ${FRONTEND_HOST}
    volumes:
      - ./frontend/:/frontend/dev
      - /frontend/dev/node_modules/

  backend:
    container_name: backend
    restart: always
    build: ./backend
    ports:
      - "8080:${BACKEND_PORT}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_ADMIN=${DB_ADMIN}
      - DB_ADMIN_PASS=${DB_ADMIN_PASS}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    networks:
      net-10.9.0.0:
        ipv4_address: ${BACKEND_HOST}
    volumes:
      - ./backend/:/backend/dev
      - /backend/dev/node_modules/

  database:
    container_name: database
    build: ./database
    ports:
      - "27017:${DB_PORT}"
    networks:
      net-10.9.0.0:
        ipv4_address: ${DB_HOST}

  rabbitmq:
    container_name: order_rabbitmq
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net

networks:
  net-10.9.0.0:
    name: net-10.9.0.0
    ipam:
      config:
        - subnet: 10.9.0.0/24
  
  rabbitmq_go_net:
    driver: bridge

volumes:
  db_data:
